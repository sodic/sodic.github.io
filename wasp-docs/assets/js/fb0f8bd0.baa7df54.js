"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[7288],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),c=r,g=m["".concat(l,".").concat(c)]||m[c]||d[c]||i;return n?a.createElement(g,s(s({ref:t},p),{},{components:n})):a.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:r,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(86010);const i={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,s),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>b});var a=n(87462),r=n(67294),i=n(86010),s=n(12466),o=n(16550),l=n(91980),u=n(67392),p=n(50012);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=d(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[l,u]=g({queryString:n,groupId:a}),[m,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=l??m;return c({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),h(e)}),[u,h,i]),tabValues:i}}var f=n(72389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:m}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==o&&(m(t),l(a))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>p.push(e),onKeyDown:c,onClick:d},s,{className:(0,i.Z)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":o===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",k.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(w,(0,a.Z)({},e,t)))}function b(e){const t=(0,f.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},46300:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(50012);function i(e){let{path:t}=e;const[n]=(0,r.Nk)("docusaurus.tab.js-ts"),i=t.lastIndexOf("{"),s=t.slice(i+1,t.length-1),[o,l]=s.split(","),u=t.slice(0,i);return a.createElement("code",null,u+("js"===n?o:l))}},87587:(e,t,n)=>{n.d(t,{Jp:()=>i,aH:()=>s});var a=n(67294);const r=e=>{let{color:t,children:n}=e;return a.createElement("span",{style:{border:`2px solid ${t}`,display:"inline-block",padding:"0.2em 0.4em",color:t,borderRadius:"0.4em",fontSize:"0.8em",lineHeight:"1",fontWeight:"bold"}},n)};function i(){return a.createElement(r,{color:"#0b62f5"},"internal")}function s(){return a.createElement(r,{color:"#f59e0b"},"required")}},25300:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>u,metadata:()=>m,toc:()=>c});var a=n(87462),r=(n(67294),n(3905)),i=n(46300),s=n(85162),o=n(74866),l=n(87587);const u={title:"Username & Password"},p=void 0,m={unversionedId:"auth/username-and-pass",id:"version-0.11.8/auth/username-and-pass",title:"Username & Password",description:"Wasp supports username & password authentication out of the box with login and signup flows. It provides you with the server-side implementation and the UI components for the client-side.",source:"@site/versioned_docs/version-0.11.8/auth/username-and-pass.md",sourceDirName:"auth",slug:"/auth/username-and-pass",permalink:"/docs/0.11.8/auth/username-and-pass",draft:!1,editUrl:"https://github.com/wasp-lang/wasp/edit/release/web/versioned_docs/version-0.11.8/auth/username-and-pass.md",tags:[],version:"0.11.8",frontMatter:{title:"Username & Password"},sidebar:"docs",previous:{title:"Auth UI",permalink:"/docs/0.11.8/auth/ui"},next:{title:"Email",permalink:"/docs/0.11.8/auth/email"}},d={},c=[{value:"Setting Up Username &amp; Password Authentication",id:"setting-up-username--password-authentication",level:2},{value:"1. Enable Username Authentication",id:"1-enable-username-authentication",level:3},{value:"2. Add the User Entity",id:"2-add-the-user-entity",level:3},{value:"3. Add the Routes and Pages",id:"3-add-the-routes-and-pages",level:3},{value:"4. Create the Client Pages",id:"4-create-the-client-pages",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Customizing the Auth Flow",id:"customizing-the-auth-flow",level:2},{value:"1. Using the <code>signup</code> and <code>login</code> actions",id:"1-using-the-signup-and-login-actions",level:3},{value:"<code>login()</code>",id:"login",level:4},{value:"<code>signup()</code>",id:"signup",level:4},{value:"2. Creating your custom actions",id:"2-creating-your-custom-actions",level:3},{value:"Using Auth",id:"using-auth",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"<code>userEntity</code> fields",id:"userentity-fields",level:3},{value:"Fields in the <code>usernameAndPassword</code> dict",id:"fields-in-the-usernameandpassword-dict",level:3}],g={toc:c},h="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Wasp supports username & password authentication out of the box with login and signup flows. It provides you with the server-side implementation and the UI components for the client-side."),(0,r.kt)("h2",{id:"setting-up-username--password-authentication"},"Setting Up Username & Password Authentication"),(0,r.kt)("p",null,"To set up username authentication we need to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Enable username authentication in the Wasp file"),(0,r.kt)("li",{parentName:"ol"},"Add the user entity"),(0,r.kt)("li",{parentName:"ol"},"Add the routes and pages"),(0,r.kt)("li",{parentName:"ol"},"Use Auth UI components in our pages")),(0,r.kt)("p",null,"Structure of the ",(0,r.kt)("inlineCode",{parentName:"p"},"main.wasp")," file we will end up with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},"// Configuring e-mail authentication\napp myApp {\n  auth: { ... }\n}\n// Defining User entity\nentity User { ... }\n// Defining routes and pages\nroute SignupRoute { ... }\npage SignupPage { ... }\n// ...\n")),(0,r.kt)("h3",{id:"1-enable-username-authentication"},"1. Enable Username Authentication"),(0,r.kt)("p",null,"Let's start with adding the following to our ",(0,r.kt)("inlineCode",{parentName:"p"},"main.wasp")," file:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp" {11}',title:'"main.wasp"',"{11}":!0},'app myApp {\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "My App",\n  auth: {\n    // 1. Specify the user entity (we\'ll define it next)\n    userEntity: User,\n    methods: {\n      // 2. Enable username authentication\n      usernameAndPassword: {},\n    },\n    onAuthFailedRedirectTo: "/login"\n  }\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"  {11}',title:'"main.wasp"',"":!0,"{11}":!0},'app myApp {\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "My App",\n  auth: {\n    // 1. Specify the user entity (we\'ll define it next)\n    userEntity: User,\n    methods: {\n      // 2. Enable username authentication\n      usernameAndPassword: {},\n    },\n    onAuthFailedRedirectTo: "/login"\n  }\n}\n')))),(0,r.kt)("p",null,"Read more about the ",(0,r.kt)("inlineCode",{parentName:"p"},"usernameAndPassword")," auth method options ",(0,r.kt)("a",{parentName:"p",href:"#fields-in-the-usernameandpassword-dict"},"here"),"."),(0,r.kt)("h3",{id:"2-add-the-user-entity"},"2. Add the User Entity"),(0,r.kt)("p",null,"When username authentication is enabled, Wasp expects certain fields in your ",(0,r.kt)("inlineCode",{parentName:"p"},"userEntity"),". Let's add these fields to our ",(0,r.kt)("inlineCode",{parentName:"p"},"main.wasp")," file:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp" {4-5}',title:'"main.wasp"',"{4-5}":!0},"// 3. Define the user entity\nentity User {=psl\n    id                        Int           @id @default(autoincrement())\n    username                  String        @unique\n    password                  String\n    // Add your own fields below\n    // ...\npsl=}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp" {4-5}',title:'"main.wasp"',"{4-5}":!0},"// 3. Define the user entity\nentity User {=psl\n    id                        Int           @id @default(autoincrement())\n    username                  String        @unique\n    password                  String\n    // Add your own fields below\n    // ...\npsl=}\n")))),(0,r.kt)("p",null,"Read more about the ",(0,r.kt)("inlineCode",{parentName:"p"},"userEntity")," fields ",(0,r.kt)("a",{parentName:"p",href:"#userentity-fields"},"here"),"."),(0,r.kt)("h3",{id:"3-add-the-routes-and-pages"},"3. Add the Routes and Pages"),(0,r.kt)("p",null,"Next, we need to define the routes and pages for the authentication pages."),(0,r.kt)("p",null,"Add the following to the ",(0,r.kt)("inlineCode",{parentName:"p"},"main.wasp")," file:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'// ...\n// 4. Define the routes\nroute LoginRoute { path: "/login", to: LoginPage }\npage LoginPage {\n  component: import { Login } from "@client/pages/auth.jsx"\n}\nroute SignupRoute { path: "/signup", to: SignupPage }\npage SignupPage {\n  component: import { Signup } from "@client/pages/auth.jsx"\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'// ...\n// 4. Define the routes\nroute LoginRoute { path: "/login", to: LoginPage }\npage LoginPage {\n  component: import { Login } from "@client/pages/auth.tsx"\n}\nroute SignupRoute { path: "/signup", to: SignupPage }\npage SignupPage {\n  component: import { Signup } from "@client/pages/auth.tsx"\n}\n')))),(0,r.kt)("p",null,"We'll define the React components for these pages in the ",(0,r.kt)(i.Z,{path:"client/pages/auth.{jsx,tsx}",mdxType:"FileExtSwitcher"})," file below."),(0,r.kt)("h3",{id:"4-create-the-client-pages"},"4. Create the Client Pages"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We are using ",(0,r.kt)("a",{parentName:"p",href:"https://tailwindcss.com/"},"Tailwind CSS")," to style the pages. Read more about how to add it ",(0,r.kt)("a",{parentName:"p",href:"../project/css-frameworks"},"here"),".")),(0,r.kt)("p",null,"Let's create a ",(0,r.kt)(i.Z,{path:"auth.{jsx,tsx}",mdxType:"FileExtSwitcher"})," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"client/pages")," folder and add the following to it:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="client/pages/auth.jsx"',title:'"client/pages/auth.jsx"'},'import { LoginForm } from "@wasp/auth/forms/Login";\nimport { SignupForm } from "@wasp/auth/forms/Signup";\nimport { Link } from "react-router-dom";\n\nexport function Login() {\n  return (\n    <Layout>\n      <LoginForm />\n      <br />\n      <span className="text-sm font-medium text-gray-900">\n        Don\'t have an account yet? <Link to="/signup">go to signup</Link>.\n      </span>\n    </Layout>\n  );\n}\n\nexport function Signup() {\n  return (\n    <Layout>\n      <SignupForm />\n      <br />\n      <span className="text-sm font-medium text-gray-900">\n        I already have an account (<Link to="/login">go to login</Link>).\n      </span>\n    </Layout>\n  );\n}\n\n// A layout component to center the content\nexport function Layout({ children }) {\n  return (\n    <div className="w-full h-full bg-white">\n      <div className="min-w-full min-h-[75vh] flex items-center justify-center">\n        <div className="w-full h-full max-w-sm p-5 bg-white">\n          <div>{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="client/pages/auth.tsx"',title:'"client/pages/auth.tsx"'},'import { LoginForm } from "@wasp/auth/forms/Login";\nimport { SignupForm } from "@wasp/auth/forms/Signup";\nimport { Link } from "react-router-dom";\n\nexport function Login() {\n  return (\n    <Layout>\n      <LoginForm />\n      <br />\n      <span className="text-sm font-medium text-gray-900">\n        Don\'t have an account yet? <Link to="/signup">go to signup</Link>.\n      </span>\n    </Layout>\n  );\n}\n\nexport function Signup() {\n  return (\n    <Layout>\n      <SignupForm />\n      <br />\n      <span className="text-sm font-medium text-gray-900">\n        I already have an account (<Link to="/login">go to login</Link>).\n      </span>\n    </Layout>\n  );\n}\n\n// A layout component to center the content\nexport function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className="w-full h-full bg-white">\n      <div className="min-w-full min-h-[75vh] flex items-center justify-center">\n        <div className="w-full h-full max-w-sm p-5 bg-white">\n          <div>{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n')))),(0,r.kt)("p",null,"We imported the generated Auth UI components and used them in our pages. Read more about the Auth UI components ",(0,r.kt)("a",{parentName:"p",href:"../auth/ui"},"here"),"."),(0,r.kt)("h3",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"That's it! We have set up username authentication in our app. \ud83c\udf89"),(0,r.kt)("p",null,"Running ",(0,r.kt)("inlineCode",{parentName:"p"},"wasp db migrate-dev")," and then ",(0,r.kt)("inlineCode",{parentName:"p"},"wasp start")," should give you a working app with username authentication. If you want to put some of the pages behind authentication, read the ",(0,r.kt)("a",{parentName:"p",href:"../auth/overview"},"using auth docs"),"."),(0,r.kt)("h2",{id:"customizing-the-auth-flow"},"Customizing the Auth Flow"),(0,r.kt)("p",null,"The login and signup flows are pretty standard: they allow the user to sign up and then log in with their username and password. The signup flow validates the username and password and then creates a new user entity in the database."),(0,r.kt)("p",null,"Read more about the default username and password validation rules and how to override them in the ",(0,r.kt)("a",{parentName:"p",href:"../auth/overview"},"using auth docs"),"."),(0,r.kt)("p",null,"If you require more control in your authentication flow, you can achieve that in the following ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create your UI and use ",(0,r.kt)("inlineCode",{parentName:"li"},"signup")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"login")," actions."),(0,r.kt)("li",{parentName:"ol"},"Create your custom sign-up and login ",(0,r.kt)("a",{parentName:"li",href:"#"},"actions")," which uses the Prisma client, along with your custom code.")),(0,r.kt)("h3",{id:"1-using-the-signup-and-login-actions"},"1. Using the ",(0,r.kt)("inlineCode",{parentName:"h3"},"signup")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"login")," actions"),(0,r.kt)("h4",{id:"login"},(0,r.kt)("inlineCode",{parentName:"h4"},"login()")),(0,r.kt)("p",null,"An action for logging in the user."),(0,r.kt)("p",null,"It takes two arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"username: string")," ",(0,r.kt)(l.aH,{mdxType:"Required"})),(0,r.kt)("p",{parentName:"li"},"Username of the user logging in.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"password: string")," ",(0,r.kt)(l.aH,{mdxType:"Required"})),(0,r.kt)("p",{parentName:"li"},"Password of the user logging in."))),(0,r.kt)("p",null,"You can use it like this:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="client/pages/auth.jsx"',title:'"client/pages/auth.jsx"'},"// Importing the login action \ud83d\udc47\nimport login from '@wasp/auth/login'\n\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nexport function LoginPage() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n  const history = useHistory()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    try {\n      await login(username, password)\n      history.push('/')\n    } catch (error) {\n      setError(error)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* ... */}\n    </form>\n  );\n}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="client/pages/auth.tsx"',title:'"client/pages/auth.tsx"'},"// Importing the login action \ud83d\udc47\nimport login from '@wasp/auth/login'\n\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nexport function LoginPage() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState<Error | null>(null)\n  const history = useHistory()\n\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    try {\n      await login(username, password)\n      history.push('/')\n    } catch (error: unknown) {\n      setError(error as Error)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* ... */}\n    </form>\n  );\n}\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When using the exposed ",(0,r.kt)("inlineCode",{parentName:"p"},"login()")," function, make sure to implement your redirect on success login logic (e.g. redirecting to home).")),(0,r.kt)("h4",{id:"signup"},(0,r.kt)("inlineCode",{parentName:"h4"},"signup()")),(0,r.kt)("p",null,"An action for signing up the user. This action does not log in the user, you still need to call ",(0,r.kt)("inlineCode",{parentName:"p"},"login()"),"."),(0,r.kt)("p",null,"It takes one argument:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"userFields: object")," ",(0,r.kt)(l.aH,{mdxType:"Required"})),(0,r.kt)("p",{parentName:"li"},"It has the following fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"username: string")," ",(0,r.kt)(l.aH,{mdxType:"Required"}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"password: string")," ",(0,r.kt)(l.aH,{mdxType:"Required"})))),(0,r.kt)("admonition",{parentName:"li",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Wasp only stores the auth-related fields of the user entity. Adding extra fields to ",(0,r.kt)("inlineCode",{parentName:"p"},"userFields")," will not have any effect."),(0,r.kt)("p",{parentName:"admonition"},"If you need to add extra fields to the user entity, we suggest doing it in a separate step after the user logs in for the first time.")))),(0,r.kt)("p",null,"You can use it like this:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="client/pages/auth.jsx"',title:'"client/pages/auth.jsx"'},"// Importing the signup and login actions \ud83d\udc47\nimport signup from '@wasp/auth/signup'\nimport login from '@wasp/auth/login'\n\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nexport function Signup() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n  const history = useHistory()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    try {\n      await signup({\n        username,\n        password,\n      })\n      await login(username, password)\n      history.push(\"/\")\n    } catch (error) {\n      setError(error)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* ... */}\n    </form>\n  );\n}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="client/pages/auth.tsx"',title:'"client/pages/auth.tsx"'},"// Importing the signup and login actions \ud83d\udc47\nimport signup from '@wasp/auth/signup'\nimport login from '@wasp/auth/login'\n\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nexport function Signup() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState<Error | null>(null)\n  const history = useHistory()\n\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    try {\n      await signup({\n        username,\n        password,\n      })\n      await login(username, password)\n      history.push(\"/\")\n    } catch (error: unknown) {\n      setError(error as Error)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* ... */}\n    </form>\n  );\n}\n")))),(0,r.kt)("h3",{id:"2-creating-your-custom-actions"},"2. Creating your custom actions"),(0,r.kt)("p",null,"The code of your custom sign-up action can look like this:"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'// ...\n\naction signupUser {\n  fn: import { signUp } from "@server/auth/signup.js",\n  entities: [User]\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/server/auth/signup.js"',title:'"src/server/auth/signup.js"'},"export const signUp = async (args, context) => {\n  // Your custom code before sign-up.\n  // ...\n\n  const newUser = context.entities.User.create({\n    data: {\n      username: args.username,\n      password: args.password // password hashed automatically by Wasp! \ud83d\udc1d\n    }\n  })\n\n  // Your custom code after sign-up.\n  // ...\n  return newUser\n}\n"))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'// ...\n\naction signupUser {\n  fn: import { signUp } from "@server/auth/signup.js",\n  entities: [User]\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/server/auth/signup.ts"',title:'"src/server/auth/signup.ts"'},"import type { User } from '@wasp/entities'\nimport type { SignupUser } from '@wasp/actions/types'\n\ntype SignupPayload = Pick<User, 'username' | 'password'>\n\nexport const signUp: SignupUser<SignupPayload, User> = async (args, context) => {\n  // Your custom code before sign-up.\n  // ...\n\n  const newUser = context.entities.User.create({\n    data: {\n      username: args.username,\n      password: args.password // password hashed automatically by Wasp! \ud83d\udc1d\n    }\n  })\n\n  // Your custom code after sign-up.\n  // ...\n  return newUser\n}\n")))),(0,r.kt)("h2",{id:"using-auth"},"Using Auth"),(0,r.kt)("p",null,"To read more about how to set up the logout button and how to get access to the logged-in user in our client and server code, read the ",(0,r.kt)("a",{parentName:"p",href:"../auth/overview"},"using auth docs"),"."),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("h3",{id:"userentity-fields"},(0,r.kt)("inlineCode",{parentName:"h3"},"userEntity")," fields"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      usernameAndPassword: {},\n    },\n    onAuthFailedRedirectTo: "/login"\n  }\n}\n\n// Wasp requires the `userEntity` to have at least the following fields\nentity User {=psl\n    id                        Int           @id @default(autoincrement())\n    username                  String        @unique\n    password                  String\npsl=}\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      usernameAndPassword: {},\n    },\n    onAuthFailedRedirectTo: "/login"\n  }\n}\n\n// Wasp requires the `userEntity` to have at least the following fields\nentity User {=psl\n    id                        Int           @id @default(autoincrement())\n    username                  String        @unique\n    password                  String\npsl=}\n')))),(0,r.kt)("p",null,"Username & password auth requires that ",(0,r.kt)("inlineCode",{parentName:"p"},"userEntity")," specified in ",(0,r.kt)("inlineCode",{parentName:"p"},"auth")," contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"username")," field of type ",(0,r.kt)("inlineCode",{parentName:"li"},"String")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"password")," field of type ",(0,r.kt)("inlineCode",{parentName:"li"},"String"))),(0,r.kt)("h3",{id:"fields-in-the-usernameandpassword-dict"},"Fields in the ",(0,r.kt)("inlineCode",{parentName:"h3"},"usernameAndPassword")," dict"),(0,r.kt)(o.Z,{groupId:"js-ts",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      usernameAndPassword: {},\n    },\n    onAuthFailedRedirectTo: "/login"\n  }\n}\n// ...\n'))),(0,r.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wasp",metastring:'title="main.wasp"',title:'"main.wasp"'},'app myApp {\n  wasp: {\n    version: "^0.11.0"\n  },\n  title: "My App",\n  auth: {\n    userEntity: User,\n    methods: {\n      usernameAndPassword: {},\n    },\n    onAuthFailedRedirectTo: "/login"\n  }\n}\n// ...\n')))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"usernameAndPassword")," dict doesn't have any options at the moment.")),(0,r.kt)("p",null,"You can read about the rest of the ",(0,r.kt)("inlineCode",{parentName:"p"},"auth")," options in the ",(0,r.kt)("a",{parentName:"p",href:"../auth/overview"},"using auth")," section of the docs."))}f.isMDXComponent=!0}}]);